CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;

CREATE TABLE "Bookingstatuses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Status" text,
    CONSTRAINT "PK_Bookingstatuses" PRIMARY KEY ("Id")
);

CREATE TABLE "Counselees" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SurveyAttempted" boolean,
    "SubscriptionType" text,
    "StartDate" timestamp with time zone,
    "EndDate" timestamp with time zone,
    CONSTRAINT "PK_Counselees" PRIMARY KEY ("Id")
);

CREATE TABLE "Counsellingtypes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CounsellingType1" text,
    CONSTRAINT "PK_Counsellingtypes" PRIMARY KEY ("Id")
);

CREATE TABLE "Emailotps" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "EmailId" text,
    "Otpgeneratedtime" timestamp with time zone,
    CONSTRAINT "PK_Emailotps" PRIMARY KEY ("Id")
);

CREATE TABLE "Entitytypes" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "EntityType" text,
    CONSTRAINT "PK_Entitytypes" PRIMARY KEY ("Id")
);

CREATE TABLE "Pastors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PastorDescription" text,
    "Duration" integer,
    CONSTRAINT "PK_Pastors" PRIMARY KEY ("Id")
);

CREATE TABLE "Plans" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanType" text,
    "Plandate" timestamp with time zone,
    "PlanName" text,
    "PlanCode" text,
    "PlanPrice" numeric,
    "IsActive" boolean,
    "PlanPeriod" integer,
    CONSTRAINT "PK_Plans" PRIMARY KEY ("Id")
);

CREATE TABLE "Sessionstatuses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Status" text,
    CONSTRAINT "PK_Sessionstatuses" PRIMARY KEY ("Id")
);

CREATE TABLE "Subscriptions" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SubscriptionPlan" text,
    "SubscriptionPrice" numeric,
    "IsActive" boolean,
    "StartDate" timestamp with time zone,
    "EndDate" timestamp with time zone,
    CONSTRAINT "PK_Subscriptions" PRIMARY KEY ("Id")
);

CREATE TABLE "Surveys" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Question" text,
    "Options" text,
    "IsActive" boolean,
    "CounselingType" integer,
    "DisplayOrder" integer,
    "CounselingTypeNavigationId" integer,
    CONSTRAINT "PK_Surveys" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Surveys_Counsellingtypes_CounselingTypeNavigationId" FOREIGN KEY ("CounselingTypeNavigationId") REFERENCES "Counsellingtypes" ("Id")
);

CREATE TABLE "Users" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserName" text,
    "UserEmail" text,
    "CreatedDate" timestamp with time zone,
    "Password" text,
    "EntityType" integer,
    "UpdatedDate" timestamp with time zone,
    "IsDeleted" boolean,
    "LoginAttempt" integer,
    "TermsAndConditionsAccepted" boolean,
    "EntityTypeNavigationId" integer,
    CONSTRAINT "PK_Users" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Users_Entitytypes_EntityTypeNavigationId" FOREIGN KEY ("EntityTypeNavigationId") REFERENCES "Entitytypes" ("Id")
);

CREATE TABLE "Favouritepastors" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CounseleeId" integer,
    "PastorId" integer,
    "UpdatedDate" timestamp with time zone,
    CONSTRAINT "PK_Favouritepastors" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Favouritepastors_Counselees_CounseleeId" FOREIGN KEY ("CounseleeId") REFERENCES "Counselees" ("Id"),
    CONSTRAINT "FK_Favouritepastors_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id")
);

CREATE TABLE "Ratings" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PastorId" integer,
    "Rating1" integer,
    "UpdatedDate" timestamp with time zone,
    CONSTRAINT "PK_Ratings" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Ratings_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id")
);

CREATE TABLE "Slots" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PastorId" integer,
    "SlotDate" date,
    "StartTime" timestamp with time zone,
    "EndTime" timestamp with time zone,
    "IsAvailable" boolean,
    "IsClosed" boolean,
    "AvailabilityTime" text,
    CONSTRAINT "PK_Slots" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Slots_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id")
);

CREATE TABLE "Surveyresponses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CounseleeId" integer,
    "QuestionId" integer,
    "Response" text,
    "CounselingType" integer,
    "CreatedDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    "CounselingTypeNavigationId" integer,
    CONSTRAINT "PK_Surveyresponses" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Surveyresponses_Counselees_CounseleeId" FOREIGN KEY ("CounseleeId") REFERENCES "Counselees" ("Id"),
    CONSTRAINT "FK_Surveyresponses_Counsellingtypes_CounselingTypeNavigationId" FOREIGN KEY ("CounselingTypeNavigationId") REFERENCES "Counsellingtypes" ("Id"),
    CONSTRAINT "FK_Surveyresponses_Surveys_QuestionId" FOREIGN KEY ("QuestionId") REFERENCES "Surveys" ("Id")
);

CREATE TABLE "Blockreporthistories" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CreatedBy" integer,
    "CounseleeId" integer,
    "PastorId" integer,
    "IsBlocked" boolean,
    "IsReported" boolean,
    "BlockReason" text,
    "ReportReason" text,
    "StartDate" timestamp with time zone,
    "EndDate" timestamp with time zone,
    "CreatedByNavigationId" integer,
    CONSTRAINT "PK_Blockreporthistories" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Blockreporthistories_Counselees_CounseleeId" FOREIGN KEY ("CounseleeId") REFERENCES "Counselees" ("Id"),
    CONSTRAINT "FK_Blockreporthistories_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id"),
    CONSTRAINT "FK_Blockreporthistories_Users_CreatedByNavigationId" FOREIGN KEY ("CreatedByNavigationId") REFERENCES "Users" ("Id")
);

CREATE TABLE "Reviews" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ReviewedBy" integer,
    "ReviewComment" text,
    "PastorId" integer,
    "Rating" integer,
    "CreatedDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    "ReviewedByNavigationId" integer,
    CONSTRAINT "PK_Reviews" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Reviews_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id"),
    CONSTRAINT "FK_Reviews_Users_ReviewedByNavigationId" FOREIGN KEY ("ReviewedByNavigationId") REFERENCES "Users" ("Id")
);

CREATE TABLE "Userentityaccesses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer,
    "EntityId" integer,
    "EntityType" integer,
    "CreatedDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    "EntityTypeNavigationId" integer,
    CONSTRAINT "PK_Userentityaccesses" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Userentityaccesses_Entitytypes_EntityTypeNavigationId" FOREIGN KEY ("EntityTypeNavigationId") REFERENCES "Entitytypes" ("Id"),
    CONSTRAINT "FK_Userentityaccesses_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id")
);

CREATE TABLE "Userimages" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer,
    "Name" text,
    "Image" bytea,
    "CreatedDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    CONSTRAINT "PK_Userimages" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Userimages_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id")
);

CREATE TABLE "Bookingevents" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "CounseleeId" integer,
    "SurveyAttempted" boolean,
    "BookingDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    "PastorId" integer,
    "BookingStatusId" integer,
    "SubscriptionId" integer,
    "IsPaymentSuccessful" boolean,
    "IsBooked" boolean,
    "SlotId" integer,
    CONSTRAINT "PK_Bookingevents" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Bookingevents_Bookingstatuses_BookingStatusId" FOREIGN KEY ("BookingStatusId") REFERENCES "Bookingstatuses" ("Id"),
    CONSTRAINT "FK_Bookingevents_Counselees_CounseleeId" FOREIGN KEY ("CounseleeId") REFERENCES "Counselees" ("Id"),
    CONSTRAINT "FK_Bookingevents_Pastors_PastorId" FOREIGN KEY ("PastorId") REFERENCES "Pastors" ("Id"),
    CONSTRAINT "FK_Bookingevents_Slots_SlotId" FOREIGN KEY ("SlotId") REFERENCES "Slots" ("Id"),
    CONSTRAINT "FK_Bookingevents_Subscriptions_SubscriptionId" FOREIGN KEY ("SubscriptionId") REFERENCES "Subscriptions" ("Id")
);

CREATE TABLE "AuditLogs" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer,
    "EventType" text,
    "EventName" text,
    "EventDescription" text,
    "CreatedDate" timestamp with time zone,
    "UpdatedDate" timestamp with time zone,
    "EventId" integer,
    CONSTRAINT "PK_AuditLogs" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AuditLogs_Bookingevents_EventId" FOREIGN KEY ("EventId") REFERENCES "Bookingevents" ("Id"),
    CONSTRAINT "FK_AuditLogs_Users_UserId" FOREIGN KEY ("UserId") REFERENCES "Users" ("Id")
);

CREATE TABLE "Paymentdetails" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "EventId" integer,
    "CounseleeId" integer,
    "Amount" numeric,
    "TransactionDate" timestamp with time zone,
    "PaymentMethod" text,
    CONSTRAINT "PK_Paymentdetails" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Paymentdetails_Bookingevents_EventId" FOREIGN KEY ("EventId") REFERENCES "Bookingevents" ("Id"),
    CONSTRAINT "FK_Paymentdetails_Counselees_CounseleeId" FOREIGN KEY ("CounseleeId") REFERENCES "Counselees" ("Id")
);

CREATE TABLE "Sessions" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "EventId" integer,
    "StartTime" timestamp with time zone,
    "EndTime" timestamp with time zone,
    "PlanId" integer,
    "IsPaymentSuccessful" boolean,
    "StatusId" integer,
    CONSTRAINT "PK_Sessions" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Sessions_Bookingevents_EventId" FOREIGN KEY ("EventId") REFERENCES "Bookingevents" ("Id"),
    CONSTRAINT "FK_Sessions_Plans_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plans" ("Id"),
    CONSTRAINT "FK_Sessions_Sessionstatuses_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Sessionstatuses" ("Id")
);

CREATE INDEX "IX_AuditLogs_EventId" ON "AuditLogs" ("EventId");

CREATE INDEX "IX_AuditLogs_UserId" ON "AuditLogs" ("UserId");

CREATE INDEX "IX_Blockreporthistories_CounseleeId" ON "Blockreporthistories" ("CounseleeId");

CREATE INDEX "IX_Blockreporthistories_CreatedByNavigationId" ON "Blockreporthistories" ("CreatedByNavigationId");

CREATE INDEX "IX_Blockreporthistories_PastorId" ON "Blockreporthistories" ("PastorId");

CREATE INDEX "IX_Bookingevents_BookingStatusId" ON "Bookingevents" ("BookingStatusId");

CREATE INDEX "IX_Bookingevents_CounseleeId" ON "Bookingevents" ("CounseleeId");

CREATE INDEX "IX_Bookingevents_PastorId" ON "Bookingevents" ("PastorId");

CREATE INDEX "IX_Bookingevents_SlotId" ON "Bookingevents" ("SlotId");

CREATE INDEX "IX_Bookingevents_SubscriptionId" ON "Bookingevents" ("SubscriptionId");

CREATE INDEX "IX_Favouritepastors_CounseleeId" ON "Favouritepastors" ("CounseleeId");

CREATE INDEX "IX_Favouritepastors_PastorId" ON "Favouritepastors" ("PastorId");

CREATE INDEX "IX_Paymentdetails_CounseleeId" ON "Paymentdetails" ("CounseleeId");

CREATE INDEX "IX_Paymentdetails_EventId" ON "Paymentdetails" ("EventId");

CREATE INDEX "IX_Ratings_PastorId" ON "Ratings" ("PastorId");

CREATE INDEX "IX_Reviews_PastorId" ON "Reviews" ("PastorId");

CREATE INDEX "IX_Reviews_ReviewedByNavigationId" ON "Reviews" ("ReviewedByNavigationId");

CREATE INDEX "IX_Sessions_EventId" ON "Sessions" ("EventId");

CREATE INDEX "IX_Sessions_PlanId" ON "Sessions" ("PlanId");

CREATE INDEX "IX_Sessions_StatusId" ON "Sessions" ("StatusId");

CREATE INDEX "IX_Slots_PastorId" ON "Slots" ("PastorId");

CREATE INDEX "IX_Surveyresponses_CounseleeId" ON "Surveyresponses" ("CounseleeId");

CREATE INDEX "IX_Surveyresponses_CounselingTypeNavigationId" ON "Surveyresponses" ("CounselingTypeNavigationId");

CREATE INDEX "IX_Surveyresponses_QuestionId" ON "Surveyresponses" ("QuestionId");

CREATE INDEX "IX_Surveys_CounselingTypeNavigationId" ON "Surveys" ("CounselingTypeNavigationId");

CREATE INDEX "IX_Userentityaccesses_EntityTypeNavigationId" ON "Userentityaccesses" ("EntityTypeNavigationId");

CREATE INDEX "IX_Userentityaccesses_UserId" ON "Userentityaccesses" ("UserId");

CREATE INDEX "IX_Userimages_UserId" ON "Userimages" ("UserId");

CREATE INDEX "IX_Users_EntityTypeNavigationId" ON "Users" ("EntityTypeNavigationId");

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20240119074740_PastorMigrations', '8.0.1');

COMMIT;

